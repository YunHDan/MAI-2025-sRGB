# general settings
name: Enhanceformer_MAI_2025
model_type: ImageCleanModel
scale: 1
num_gpu: 2  # set num_gpu: 0 for cpu mode
manual_seed: 100
use_amp: True

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_PairedImage
    geometric_augs: true

    filename_tmpl: '{}'
    io_backend:
      type: disk

#    data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 256

    # ## ------- Training on single fixed-patch size 100*100 --------
    mini_batch_sizes: [256]
    iters: [21562] # [150000]
    gt_size: 100
    gt_sizes: [100]
    # ### ------------------------------------------------------------

    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: ValSet
    type: Dataset_PairedImage
    dataroot_gt: dped/blackberry/test_data/patches/canon
    dataroot_lq: dped/blackberry/test_data/patches/blackberry
    io_backend:
      type: disk

# network structures
network_g:
  type: Enhanceformer
  in_channels: 3
  out_channels: 3
  n_feat: 40
  stage: 1
  num_blocks: [1,2,2]

# path
path:
  pretrain_network_g: /net_g_latest.pth
  strict_load_g: true
  resume_state: ~

# training settings
train:
  total_iter: 21562
  warmup_iter: -1 # no warm up
  use_grad_clip: true

  # Split 300k iterations into two cycles. 
  # 1st cycle: fixed 3e-4 LR for 92k iters. 
  # 2nd cycle: cosine annealing (3e-4 to 1e-6) for 208k iters.
  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [6612, 14950]
    restart_weights: [1,1]
    eta_mins: [0.0015, 0.000005]
  
  mixing_augs:
    mixup: true
    mixup_beta: 1.2
    use_identity: true

  optim_g:
    type: Adam
    lr: !!float 1e-3
    # weight_decay: !!float 1e-4
    betas: [0.9, 0.999]
  
  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1
    reduction: mean

# validation settings
val:
  window_size: 4
  val_freq: !!float 1e3
  save_img: false
  rgb2bgr: true
  use_image: false
  max_minibatch: 8

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1500
  use_tb_logger: false
  wandb:
    project: low_light
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29800
